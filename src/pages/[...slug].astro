---
import { getCollection } from 'astro:content';
import Post from '../layouts/Post.astro';
import type { CollectionEntry } from "astro:content";

type BlogPost = CollectionEntry<"blog">;

// Get the slug parameter from the URL
export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  
  return blogEntries.map((entry) => {
    // Use the filename without date prefix as the slug
    const slug = entry.id.replace(/^\d{4}-\d{2}-\d{2}-/, '').replace(/\.md$/, '');
    
    return {
      params: { slug },
      props: { entry },
    };
  });
}

const { entry } = Astro.props as { entry: BlogPost };
const { Content } = await entry.render();

// Get the post date from frontmatter or fallback to filename date
let publishDate: Date;
if (entry.data.date) {
  publishDate = new Date(entry.data.date);
} else {
  const dateMatch = entry.id.match(/^(\d{4}-\d{2}-\d{2})/);
  publishDate = dateMatch ? new Date(dateMatch[1]) : new Date();
}

// Use frontmatter for post metadata
const title = entry.data.title || entry.id.replace(/^\d{4}-\d{2}-\d{2}-/, '').replace(/\.md$/, '').replace(/-/g, ' ');
---

<Post
  title={title}
  publishDate={publishDate}
  updatedDate={entry.data.modified}
>
  <Content />
</Post> 